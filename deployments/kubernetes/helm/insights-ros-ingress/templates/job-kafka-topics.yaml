apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "insights-ros-ingress.fullname" . }}-kafka-topics
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "insights-ros-ingress.labels" . | nindent 4 }}
    app.kubernetes.io/component: setup
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "insights-ros-ingress.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: setup
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-kafka
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z {{ include "insights-ros-ingress.fullname" . }}-kafka {{ .Values.kafka.broker.port }}; do
                echo "Waiting for Kafka..."
                sleep 5
              done
              echo "Kafka is ready"
      containers:
        - name: kafka-topics
          image: "{{ .Values.kafka.broker.image.repository }}:{{ .Values.kafka.broker.image.tag }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          command: ["bash", "-c"]
          args:
            - |
              echo "Waiting for Kafka to be ready..."
              cub kafka-ready -b {{ include "insights-ros-ingress.fullname" . }}-kafka:{{ .Values.kafka.broker.port }} 1 20
              echo "Creating topics..."
              kafka-topics --create --if-not-exists --topic {{ .Values.kafka.topic }} --bootstrap-server {{ include "insights-ros-ingress.fullname" . }}-kafka:{{ .Values.kafka.broker.port }}
              kafka-topics --create --if-not-exists --topic platform.upload.validation --bootstrap-server {{ include "insights-ros-ingress.fullname" . }}-kafka:{{ .Values.kafka.broker.port }}
              echo "Topics created successfully"